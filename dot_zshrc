
# The following lines were added by compinstall

zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle :compinstall filename '/home/simon/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob nomatch notify
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install

# Make pipenv install the venv next to the Pipfile
export PIPENV_VENV_IN_PROJECT=1


# Aliases for some common commands (don't forget to add its 'old' counterpart):
alias ls='eza --icons'
alias lsold='ls'
alias cd='z'
alias cdold='cd'
alias spotify='spotify-launcher'
alias oldspotify='spotify'
alias v='fd --type f --hidden --exclude .git | fzf | xargs nvim'
alias vt='fd --type f --hidden --exclude .git | fzf-tmux | xargs nvim'
alias org='cd ~/org && ec .'
alias ec='emacsclient -r -a "emacs"'
alias ect='emacsclient -nw'
alias chrome='google-chrome-stable'
alias zel='zellij'
alias jos='joshuto'
alias cm='chezmoi'
alias cme='chezmoi edit'
alias cmat='chezmoi add --template'
alias icat='kitten icat'
alias kdiff='kitten diff'
alias gitg="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)' --all"
alias gita="git add"
alias gitc="git commit -m"
alias gits="git status"
alias gitp="git push"


# Visual and editor variables:
export VISUAL='nvim'
export EDITOR='nvim'
export BROWSER='google-chrome-stable'

#ruby :(
export GEM_HOME="$HOME/.gem"

# starship prompt
export STARSHIP_CONFIG=~/.config/starship/starship.toml


# Add to path:
export PATH="/home/simon/.cargo/bin:/home/simon/.local/bin/:/home/simon/bin:/home/simon/.config/emacs/bin:/home/simon/go/bin:$HOME/.gem/bin:$HOME/.gem/ruby/3.0.0/bin:~/config/emacs/bin:$PATH"
# Zoxide "init"
eval "$(zoxide init zsh)"

eval "$(starship init zsh)"

# Zsh syntax hl
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# Fzf completion and shortcuts
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh

# export FZF_DEFAULT_COMMAND='rg --hidden --glob "!*.git" ""'
# export FZF_CTRL_T_COMMAND='rg --hidden --glob "!*.git" ""'
# export FZF_ALT_C_COMMAND='rg --hidden --files --null | xargs -0 dirname | uniq'
# export FZF_DEFAULT_OPTS="
# --layout=reverse
# --info=inline
# --height=80%
# --multi
# --preview '([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
# --color='hl:148,hl+:154,pointer:032,marker:010,bg+:237,gutter:008'
# --prompt='∼ ' --pointer='▶' --marker='✓'
# --bind '?:toggle-preview'"
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Create pipenv venv inside the project's directory
PIPENV_VENV_IN_PROJECT=1
PIPENV_VERBOSITY=-1

vterm_printf() {
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
